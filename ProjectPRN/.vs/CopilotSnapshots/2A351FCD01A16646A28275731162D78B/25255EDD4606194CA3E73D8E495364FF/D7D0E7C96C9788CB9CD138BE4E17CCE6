using BusinessObjects.Models;
using Microsoft.EntityFrameworkCore;

namespace DataAccessObjects;

public interface IAssessmentResultDAO : IGenericDAO<AssessmentResult>
{
    IEnumerable<AssessmentResult> GetByStudentId(int studentId);
    IEnumerable<AssessmentResult> GetByAssessmentId(int assessmentId);
}

public class AssessmentResultDAO : IAssessmentResultDAO
{
    private readonly Prn212skillsHoannn6Context _context;

    public AssessmentResultDAO()
    {
        _context = new Prn212skillsHoannn6Context();
    }

    public IEnumerable<AssessmentResult> GetAll()
    {
        return _context.AssessmentResults.Include(r => r.Student).Include(r => r.Assessment).ToList();
    }

    public AssessmentResult? GetById(int id)
    {
        return _context.AssessmentResults.Include(r => r.Student).Include(r => r.Assessment).FirstOrDefault(r => r.ResultId == id);
    }

    public IEnumerable<AssessmentResult> GetByStudentId(int studentId)
    {
        return _context.AssessmentResults.Where(r => r.StudentId == studentId).ToList();
    }

    public IEnumerable<AssessmentResult> GetByAssessmentId(int assessmentId)
    {
        return _context.AssessmentResults.Where(r => r.AssessmentId == assessmentId).ToList();
    }

    public void Add(AssessmentResult entity)
    {
        _context.AssessmentResults.Add(entity);
    }

    public void Update(AssessmentResult entity)
    {
        _context.AssessmentResults.Update(entity);
    }

    public void Delete(AssessmentResult entity)
    {
        _context.AssessmentResults.Remove(entity);
    }

    public void SaveChanges()
    {
        _context.SaveChanges();
    }
}