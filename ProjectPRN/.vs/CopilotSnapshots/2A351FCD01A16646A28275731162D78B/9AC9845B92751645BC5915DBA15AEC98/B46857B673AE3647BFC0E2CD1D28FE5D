using BusinessObjects.Models;
using Microsoft.EntityFrameworkCore;

namespace DataAccessObjects;

public interface ICourseScheduleDAO : IGenericDAO<CourseSchedule>
{
    IEnumerable<CourseSchedule> GetByCourseId(int courseId);
}

public class CourseScheduleDAO : ICourseScheduleDAO
{
    private readonly Prn212skillsHoannn6Context _context;

    public CourseScheduleDAO()
    {
        _context = new Prn212skillsHoannn6Context();
    }

    public IEnumerable<CourseSchedule> GetAll()
    {
        return _context.CourseSchedules.ToList();
    }

    public CourseSchedule? GetById(int id)
    {
        return _context.CourseSchedules.FirstOrDefault(s => s.ScheduleId == id);
    }

    public IEnumerable<CourseSchedule> GetByCourseId(int courseId)
    {
        return _context.CourseSchedules.Where(s => s.CourseId == courseId).ToList();
    }

    public void Add(CourseSchedule entity)
    {
        _context.CourseSchedules.Add(entity);
    }

    public void Update(CourseSchedule entity)
    {
        _context.CourseSchedules.Update(entity);
    }

    public void Delete(CourseSchedule entity)
    {
        _context.CourseSchedules.Remove(entity);
    }

    public void SaveChanges()
    {
        _context.SaveChanges();
    }
}