using BusinessObjects.Models;
using Microsoft.EntityFrameworkCore;

namespace DataAccessObjects;

public interface IEnrollmentDAO : IGenericDAO<Enrollment>
{
    IEnumerable<Enrollment> GetByStudent(int studentId);
    IEnumerable<Enrollment> GetByCourse(int courseId);
}

public class EnrollmentDAO : IEnrollmentDAO
{
    private readonly Prn212skillsHoannn6Context _context;

    public EnrollmentDAO()
    {
        _context = new Prn212skillsHoannn6Context();
    }

    public IEnumerable<Enrollment> GetAll()
    {
        return _context.Enrollments.Include(e => e.Student)
                                 .Include(e => e.Course)
                                 .ToList();
    }

    public Enrollment? GetById(int id)
    {
        return _context.Enrollments.Include(e => e.Student)
                                 .Include(e => e.Course)
                                 .FirstOrDefault(e => e.EnrollmentId == id);
    }

    public IEnumerable<Enrollment> GetByStudent(int studentId)
    {
        return _context.Enrollments.Where(e => e.StudentId == studentId)
                                 .Include(e => e.Course)
                                 .ToList();
    }

    public IEnumerable<Enrollment> GetByCourse(int courseId)
    {
        return _context.Enrollments.Where(e => e.CourseId == courseId)
                                 .Include(e => e.Student)
                                 .ToList();
    }

    public void Add(Enrollment entity)
    {
        _context.Enrollments.Add(entity);
    }

    public void Update(Enrollment entity)
    {
        _context.Enrollments.Update(entity);
    }

    public void Delete(Enrollment entity)
    {
        _context.Enrollments.Remove(entity);
    }

    public void SaveChanges()
    {
        _context.SaveChanges();
    }
}