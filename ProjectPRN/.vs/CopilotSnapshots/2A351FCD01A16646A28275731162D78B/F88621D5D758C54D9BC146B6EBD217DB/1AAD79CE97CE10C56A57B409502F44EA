using BusinessObjects.Models;
using Microsoft.EntityFrameworkCore;

namespace DataAccessObjects;

public interface IActivityLogDAO : IGenericDAO<ActivityLog>
{
    IEnumerable<ActivityLog> GetByUserId(int userId);
}

public class ActivityLogDAO : IActivityLogDAO
{
    private readonly Prn212skillsHoannn6Context _context;

    public ActivityLogDAO()
    {
        _context = new Prn212skillsHoannn6Context();
    }

    public IEnumerable<ActivityLog> GetAll()
    {
        return _context.ActivityLogs.Include(a => a.User).ToList();
    }

    public ActivityLog? GetById(int id)
    {
        return _context.ActivityLogs.Include(a => a.User).FirstOrDefault(a => a.LogId == id);
    }

    public IEnumerable<ActivityLog> GetByUserId(int userId)
    {
        return _context.ActivityLogs.Where(a => a.UserId == userId).ToList();
    }

    public void Add(ActivityLog entity)
    {
        _context.ActivityLogs.Add(entity);
    }

    public void Update(ActivityLog entity)
    {
        _context.ActivityLogs.Update(entity);
    }

    public void Delete(ActivityLog entity)
    {
        _context.ActivityLogs.Remove(entity);
    }

    public void SaveChanges()
    {
        _context.SaveChanges();
    }
}