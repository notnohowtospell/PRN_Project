using BusinessObjects.Models;
using Microsoft.EntityFrameworkCore;

namespace DataAccessObjects;

public interface ICourseMaterialDAO : IGenericDAO<CourseMaterial>
{
    IEnumerable<CourseMaterial> GetByCourseId(int courseId);
}

public class CourseMaterialDAO : ICourseMaterialDAO
{
    private readonly Prn212skillsHoannn6Context _context;

    public CourseMaterialDAO()
    {
        _context = new Prn212skillsHoannn6Context();
    }

    public IEnumerable<CourseMaterial> GetAll()
    {
        return _context.CourseMaterials.Include(m => m.Course).ToList();
    }

    public CourseMaterial? GetById(int id)
    {
        return _context.CourseMaterials.Include(m => m.Course).FirstOrDefault(m => m.MaterialId == id);
    }

    public IEnumerable<CourseMaterial> GetByCourseId(int courseId)
    {
        return _context.CourseMaterials.Where(m => m.CourseId == courseId).ToList();
    }

    public void Add(CourseMaterial entity)
    {
        _context.CourseMaterials.Add(entity);
    }

    public void Update(CourseMaterial entity)
    {
        _context.CourseMaterials.Update(entity);
    }

    public void Delete(CourseMaterial entity)
    {
        _context.CourseMaterials.Remove(entity);
    }

    public void SaveChanges()
    {
        _context.SaveChanges();
    }
}