using BusinessObjects.Models;
using Microsoft.EntityFrameworkCore;

namespace DataAccessObjects;

public interface IFeedbackDAO : IGenericDAO<Feedback>
{
    IEnumerable<Feedback> GetByStudentId(int studentId);
    IEnumerable<Feedback> GetByCourseId(int courseId);
}

public class FeedbackDAO : IFeedbackDAO
{
    private readonly Prn212skillsHoannn6Context _context;

    public FeedbackDAO()
    {
        _context = new Prn212skillsHoannn6Context();
    }

    public IEnumerable<Feedback> GetAll()
    {
        return _context.Feedbacks.Include(f => f.Student).Include(f => f.Course).ToList();
    }

    public Feedback? GetById(int id)
    {
        return _context.Feedbacks.Include(f => f.Student).Include(f => f.Course).FirstOrDefault(f => f.FeedbackId == id);
    }

    public IEnumerable<Feedback> GetByStudentId(int studentId)
    {
        return _context.Feedbacks.Where(f => f.StudentId == studentId).ToList();
    }

    public IEnumerable<Feedback> GetByCourseId(int courseId)
    {
        return _context.Feedbacks.Where(f => f.CourseId == courseId).ToList();
    }

    public void Add(Feedback entity)
    {
        _context.Feedbacks.Add(entity);
    }

    public void Update(Feedback entity)
    {
        _context.Feedbacks.Update(entity);
    }

    public void Delete(Feedback entity)
    {
        _context.Feedbacks.Remove(entity);
    }

    public void SaveChanges()
    {
        _context.SaveChanges();
    }
}