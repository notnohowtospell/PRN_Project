using BusinessObjects.Models;
using Microsoft.EntityFrameworkCore;

namespace DataAccessObjects;

public interface IPaymentDAO : IGenericDAO<Payment>
{
    IEnumerable<Payment> GetByStudentId(int studentId);
    IEnumerable<Payment> GetByCourseId(int courseId);
}

public class PaymentDAO : IPaymentDAO
{
    private readonly Prn212skillsHoannn6Context _context;

    public PaymentDAO()
    {
        _context = new Prn212skillsHoannn6Context();
    }

    public IEnumerable<Payment> GetAll()
    {
        return _context.Payments.Include(p => p.Student).Include(p => p.Course).ToList();
    }

    public Payment? GetById(int id)
    {
        return _context.Payments.Include(p => p.Student).Include(p => p.Course).FirstOrDefault(p => p.PaymentId == id);
    }

    public IEnumerable<Payment> GetByStudentId(int studentId)
    {
        return _context.Payments.Where(p => p.StudentId == studentId).ToList();
    }

    public IEnumerable<Payment> GetByCourseId(int courseId)
    {
        return _context.Payments.Where(p => p.CourseId == courseId).ToList();
    }

    public void Add(Payment entity)
    {
        _context.Payments.Add(entity);
    }

    public void Update(Payment entity)
    {
        _context.Payments.Update(entity);
    }

    public void Delete(Payment entity)
    {
        _context.Payments.Remove(entity);
    }

    public void SaveChanges()
    {
        _context.SaveChanges();
    }
}